db.nodes.aggregate([
  {
    // Stage 1: Use $graphLookup to recursively retrieve all descendants
    $graphLookup: {
      from: "nodes",          // The same collection
      startWith: "$children", // Start from the "children" field
      connectFromField: "children", // Follow the "children" field
      connectToField: "_id",       // Match against the "_id" field
      as: "allDescendants"    // Output all nodes to this field
    }
  },
  {
    // Stage 2: Combine the root node with all its descendants
    $addFields: {
      allNodes: { $concatArrays: [["$$ROOT"], "$allDescendants"] }
    }
  },
  {
    // Stage 3: Unwind the combined list to create a flat structure
    $unwind: "$allNodes"
  },
  {
    // Stage 4: Replace the root with the flattened node data
    $replaceRoot: { newRoot: "$allNodes" }
  },
  {
    // Stage 5: Remove duplicates (optional, if data can overlap)
    $group: {
      _id: "$_id", // Group by unique identifier
      name: { $first: "$name" }, // Keep the name field
      children: { $first: "$children" } // Keep children for reference
    }
  }
]);