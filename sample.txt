<h2>Assets</h2>

<!-- #docregion align-start -->
<mat-tab-group mat-align-tabs="start">
  <!-- #enddocregion align-start -->
    <mat-tab label="First">Content 1</mat-tab>
    <mat-tab label="Second">Content 2</mat-tab>
    <mat-tab label="Third">Content 3</mat-tab>
  </mat-tab-group>
  
  <mat-tab-group mat-align-tabs="center">
    <mat-tab label="First">Content 1</mat-tab>
    <mat-tab label="Second">Content 2</mat-tab>
    <mat-tab label="Third">Content 3</mat-tab>
  </mat-tab-group>
  
  <mat-tab-group mat-align-tabs="end">
    <mat-tab label="First">Content 1</mat-tab>
    <mat-tab label="Second">Content 2</mat-tab>
    <mat-tab label="Third">Content 3</mat-tab>
  </mat-tab-group>
  
   

<mat-sidenav-container>
  <mat-sidenav #drawer class="filter-sidenav" mode="side">
    <h3>Filters</h3>
    <mat-divider></mat-divider>
    <mat-toolbar class="button-tool-bar">
      <button mat-raised-button color="primary" (click)="applyFilterOnClick()">Apply</button>
      <span class="spacer"></span>
      <button mat-raised-button (click)="clearFilterOnClick()">Clear</button>
    </mat-toolbar>
    
    <div class="filter-sidenav-list-container">
      <mat-tree [dataSource]="dataSource" [treeControl]="treeControl">
        <mat-tree-node *matTreeNodeDef="let node" matTreeNodeToggle matTreeNodePadding>
          <button mat-icon-button disabled></button>
          <mat-checkbox class="checklist-leaf-node"
                        [checked]="checklistSelection.isSelected(node)"
                        (change)="checklistSelection.toggle(node);">{{node.item}}</mat-checkbox>
        </mat-tree-node>
      
        <mat-tree-node *matTreeNodeDef="let node; when: hasNoContent" matTreeNodePadding>
          <button mat-icon-button disabled></button>
          <mat-form-field>
            <input matInput #itemValue placeholder="New item...">
          </mat-form-field>
          <button mat-button (click)="saveNode(node, itemValue.value)">Save</button>
        </mat-tree-node>
      
        <mat-tree-node *matTreeNodeDef="let node; when: hasChild" matTreeNodePadding>
          <button mat-icon-button matTreeNodeToggle
                  [attr.aria-label]="'toggle ' + node.filename">
            <mat-icon class="mat-icon-rtl-mirror">
              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}
            </mat-icon>
          </button>
          <mat-checkbox [checked]="descendantsAllSelected(node)"
                        [indeterminate]="descendantsPartiallySelected(node)"
                        (change)="todoItemSelectionToggle(node)">{{node.item}}</mat-checkbox>
          <button mat-icon-button (click)="addNewItem(node)"><mat-icon>add</mat-icon></button>
        </mat-tree-node>
      </mat-tree>
    </div>
  </mat-sidenav>
  <mat-sidenav-content>
    <mat-toolbar class="button-tool-bar">
      <button type="button" title="Main Menu" aria-label="Toggle sidenav" mat-icon-button (click)="drawer.toggle()">
        <mat-icon *ngIf="!drawer.opened" aria-label="Open menu">menu_open</mat-icon>
        <mat-icon *ngIf="drawer.opened" aria-label="Close menu">close</mat-icon>
      </button>
      <mat-form-field class="filter-mat-field">
        <input matInput #searchInput placeholder="Search">
      </mat-form-field>
      <span class="spacer"></span>
       
    </mat-toolbar>
    <table mat-table class="full-width-table" [dataSource]="dataSetSource" matSort matSortActive="AssetNumber"
      matSortDirection="asc" matSortDisableClear aria-label="Elements">
      <ng-container matColumnDef="Id">
        <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>
        <td mat-cell *matCellDef="let row">{{row.Id}}</td>
      </ng-container>

      <ng-container matColumnDef="AssetNumber">
        <th mat-header-cell *matHeaderCellDef mat-sort-header>Asset Number</th>
        <td mat-cell *matCellDef="let row">{{row.AssetNumber}}</td>
      </ng-container>


      <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
      <tr mat-row *matRowDef="let row; columns: displayedColumns;" (click)="selectRow(row)"
        [ngClass]="{ 'selected': row === selectedRow }"></tr>
    </table>
    <div *ngIf="isLoading" class="loading-spinner">
      <mat-progress-spinner diameter=50 color="primary" mode="indeterminate"></mat-progress-spinner>
    </div>

    
  </mat-sidenav-content>
</mat-sidenav-container>




